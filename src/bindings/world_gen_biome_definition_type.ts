// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  Identity,
  ProductType,
  ProductTypeElement,
  SubscriptionBuilderImpl,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
  type CallReducerFlags,
  type DbContext,
  type ErrorContextInterface,
  type Event,
  type EventContextInterface,
  type ReducerEventContextInterface,
  type SubscriptionEventContextInterface,
} from "@clockworklabs/spacetimedb-sdk";
import { WorldGenAnimationCurve as __WorldGenAnimationCurve } from "./world_gen_animation_curve_type";
import { WorldGenNoiseSpecs as __WorldGenNoiseSpecs } from "./world_gen_noise_specs_type";
import { WorldGenNoiseBasedElevationLayer as __WorldGenNoiseBasedElevationLayer } from "./world_gen_noise_based_elevation_layer_type";
import { WorldGenRiverGenerationSettings as __WorldGenRiverGenerationSettings } from "./world_gen_river_generation_settings_type";

export type WorldGenBiomeDefinition = {
  distanceToSeaCurve: __WorldGenAnimationCurve,
  distanceToBiomesCurve: __WorldGenAnimationCurve,
  transitionLength: number,
  noiseSeaMultiplier: __WorldGenAnimationCurve,
  noiseBasedElevationLayers: __WorldGenNoiseBasedElevationLayer[],
  maxLakeDepth: number,
  terracing: boolean,
  grassDensity: number,
  lakeNoiseSpecs: __WorldGenNoiseSpecs,
  lakeNoiseThreshold: number,
  lakeDepthMultiplier: number,
  lakeDepthSmoothing: number,
  lakeSeaBarriers: boolean,
  riverGenerationSettings: __WorldGenRiverGenerationSettings | undefined,
};

/**
 * A namespace for generated helper functions.
 */
export namespace WorldGenBiomeDefinition {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement("distanceToSeaCurve", __WorldGenAnimationCurve.getTypeScriptAlgebraicType()),
      new ProductTypeElement("distanceToBiomesCurve", __WorldGenAnimationCurve.getTypeScriptAlgebraicType()),
      new ProductTypeElement("transitionLength", AlgebraicType.createI32Type()),
      new ProductTypeElement("noiseSeaMultiplier", __WorldGenAnimationCurve.getTypeScriptAlgebraicType()),
      new ProductTypeElement("noiseBasedElevationLayers", AlgebraicType.createArrayType(__WorldGenNoiseBasedElevationLayer.getTypeScriptAlgebraicType())),
      new ProductTypeElement("maxLakeDepth", AlgebraicType.createI32Type()),
      new ProductTypeElement("terracing", AlgebraicType.createBoolType()),
      new ProductTypeElement("grassDensity", AlgebraicType.createI32Type()),
      new ProductTypeElement("lakeNoiseSpecs", __WorldGenNoiseSpecs.getTypeScriptAlgebraicType()),
      new ProductTypeElement("lakeNoiseThreshold", AlgebraicType.createF32Type()),
      new ProductTypeElement("lakeDepthMultiplier", AlgebraicType.createI32Type()),
      new ProductTypeElement("lakeDepthSmoothing", AlgebraicType.createF32Type()),
      new ProductTypeElement("lakeSeaBarriers", AlgebraicType.createBoolType()),
      new ProductTypeElement("riverGenerationSettings", AlgebraicType.createOptionType(__WorldGenRiverGenerationSettings.getTypeScriptAlgebraicType())),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: WorldGenBiomeDefinition): void {
    WorldGenBiomeDefinition.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): WorldGenBiomeDefinition {
    return WorldGenBiomeDefinition.getTypeScriptAlgebraicType().deserialize(reader);
  }

}


