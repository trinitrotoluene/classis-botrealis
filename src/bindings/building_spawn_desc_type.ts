// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  Identity,
  ProductType,
  ProductTypeElement,
  SubscriptionBuilderImpl,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
  type CallReducerFlags,
  type DbContext,
  type ErrorContextInterface,
  type Event,
  type EventContextInterface,
  type ReducerEventContextInterface,
  type SubscriptionEventContextInterface,
} from "@clockworklabs/spacetimedb-sdk";
import { BuildingSpawnType as __BuildingSpawnType } from "./building_spawn_type_type";
import { NpcType as __NpcType } from "./npc_type_type";
import { EnemyType as __EnemyType } from "./enemy_type_type";

export type BuildingSpawnDesc = {
  id: number,
  buildingId: number,
  x: number,
  z: number,
  direction: number,
  spawnType: __BuildingSpawnType,
  travelerType: __NpcType | undefined,
  enemyType: __EnemyType | undefined,
  spawnIds: number[],
  respawnTimeMin: number,
  respawnTimeMax: number,
};

/**
 * A namespace for generated helper functions.
 */
export namespace BuildingSpawnDesc {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement("id", AlgebraicType.createI32Type()),
      new ProductTypeElement("buildingId", AlgebraicType.createI32Type()),
      new ProductTypeElement("x", AlgebraicType.createI32Type()),
      new ProductTypeElement("z", AlgebraicType.createI32Type()),
      new ProductTypeElement("direction", AlgebraicType.createI32Type()),
      new ProductTypeElement("spawnType", __BuildingSpawnType.getTypeScriptAlgebraicType()),
      new ProductTypeElement("travelerType", AlgebraicType.createOptionType(__NpcType.getTypeScriptAlgebraicType())),
      new ProductTypeElement("enemyType", AlgebraicType.createOptionType(__EnemyType.getTypeScriptAlgebraicType())),
      new ProductTypeElement("spawnIds", AlgebraicType.createArrayType(AlgebraicType.createI32Type())),
      new ProductTypeElement("respawnTimeMin", AlgebraicType.createF32Type()),
      new ProductTypeElement("respawnTimeMax", AlgebraicType.createF32Type()),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: BuildingSpawnDesc): void {
    BuildingSpawnDesc.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): BuildingSpawnDesc {
    return BuildingSpawnDesc.getTypeScriptAlgebraicType().deserialize(reader);
  }

}


