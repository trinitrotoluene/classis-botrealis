// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  Identity,
  ProductType,
  ProductTypeElement,
  SubscriptionBuilderImpl,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
  type CallReducerFlags,
  type DbContext,
  type ErrorContextInterface,
  type Event,
  type EventContextInterface,
  type ReducerEventContextInterface,
  type SubscriptionEventContextInterface,
} from "@clockworklabs/spacetimedb-sdk";
// A namespace for generated variants and helper functions.
export namespace EnemyType {
  // These are the generated variant types for each variant of the tagged union.
  // One type is generated per variant and will be used in the `value` field of
  // the tagged union.
  export type None = { tag: "None" };
  export type PracticeDummy = { tag: "PracticeDummy" };
  export type GrassBird = { tag: "GrassBird" };
  export type DesertBird = { tag: "DesertBird" };
  export type SwampBird = { tag: "SwampBird" };
  export type Goat = { tag: "Goat" };
  export type MountainGoat = { tag: "MountainGoat" };
  export type DeerFemale = { tag: "DeerFemale" };
  export type DeerMale = { tag: "DeerMale" };
  export type Elk = { tag: "Elk" };
  export type BoarFemale = { tag: "BoarFemale" };
  export type BoarMale = { tag: "BoarMale" };
  export type BoarElder = { tag: "BoarElder" };
  export type PlainsOx = { tag: "PlainsOx" };
  export type TundraOx = { tag: "TundraOx" };
  export type JungleLargeBird = { tag: "JungleLargeBird" };
  export type DesertLargeBird = { tag: "DesertLargeBird" };
  export type Jakyl = { tag: "Jakyl" };
  export type AlphaJakyl = { tag: "AlphaJakyl" };
  export type KingJakyl = { tag: "KingJakyl" };
  export type RockCrab = { tag: "RockCrab" };
  export type DesertCrab = { tag: "DesertCrab" };
  export type FrostCrab = { tag: "FrostCrab" };
  export type ForestToad = { tag: "ForestToad" };
  export type SwampToad = { tag: "SwampToad" };
  export type FrostToad = { tag: "FrostToad" };
  export type Umbura = { tag: "Umbura" };
  export type AlphaUmbura = { tag: "AlphaUmbura" };
  export type KingUmbura = { tag: "KingUmbura" };
  export type Drone = { tag: "Drone" };
  export type Soldier = { tag: "Soldier" };
  export type Queen = { tag: "Queen" };

  // Helper functions for constructing each variant of the tagged union.
  // ```
  // const foo = Foo.A(42);
  // assert!(foo.tag === "A");
  // assert!(foo.value === 42);
  // ```
  export const None = { tag: "None" };
  export const PracticeDummy = { tag: "PracticeDummy" };
  export const GrassBird = { tag: "GrassBird" };
  export const DesertBird = { tag: "DesertBird" };
  export const SwampBird = { tag: "SwampBird" };
  export const Goat = { tag: "Goat" };
  export const MountainGoat = { tag: "MountainGoat" };
  export const DeerFemale = { tag: "DeerFemale" };
  export const DeerMale = { tag: "DeerMale" };
  export const Elk = { tag: "Elk" };
  export const BoarFemale = { tag: "BoarFemale" };
  export const BoarMale = { tag: "BoarMale" };
  export const BoarElder = { tag: "BoarElder" };
  export const PlainsOx = { tag: "PlainsOx" };
  export const TundraOx = { tag: "TundraOx" };
  export const JungleLargeBird = { tag: "JungleLargeBird" };
  export const DesertLargeBird = { tag: "DesertLargeBird" };
  export const Jakyl = { tag: "Jakyl" };
  export const AlphaJakyl = { tag: "AlphaJakyl" };
  export const KingJakyl = { tag: "KingJakyl" };
  export const RockCrab = { tag: "RockCrab" };
  export const DesertCrab = { tag: "DesertCrab" };
  export const FrostCrab = { tag: "FrostCrab" };
  export const ForestToad = { tag: "ForestToad" };
  export const SwampToad = { tag: "SwampToad" };
  export const FrostToad = { tag: "FrostToad" };
  export const Umbura = { tag: "Umbura" };
  export const AlphaUmbura = { tag: "AlphaUmbura" };
  export const KingUmbura = { tag: "KingUmbura" };
  export const Drone = { tag: "Drone" };
  export const Soldier = { tag: "Soldier" };
  export const Queen = { tag: "Queen" };

  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createSumType([
      new SumTypeVariant("None", AlgebraicType.createProductType([])),
      new SumTypeVariant("PracticeDummy", AlgebraicType.createProductType([])),
      new SumTypeVariant("GrassBird", AlgebraicType.createProductType([])),
      new SumTypeVariant("DesertBird", AlgebraicType.createProductType([])),
      new SumTypeVariant("SwampBird", AlgebraicType.createProductType([])),
      new SumTypeVariant("Goat", AlgebraicType.createProductType([])),
      new SumTypeVariant("MountainGoat", AlgebraicType.createProductType([])),
      new SumTypeVariant("DeerFemale", AlgebraicType.createProductType([])),
      new SumTypeVariant("DeerMale", AlgebraicType.createProductType([])),
      new SumTypeVariant("Elk", AlgebraicType.createProductType([])),
      new SumTypeVariant("BoarFemale", AlgebraicType.createProductType([])),
      new SumTypeVariant("BoarMale", AlgebraicType.createProductType([])),
      new SumTypeVariant("BoarElder", AlgebraicType.createProductType([])),
      new SumTypeVariant("PlainsOx", AlgebraicType.createProductType([])),
      new SumTypeVariant("TundraOx", AlgebraicType.createProductType([])),
      new SumTypeVariant("JungleLargeBird", AlgebraicType.createProductType([])),
      new SumTypeVariant("DesertLargeBird", AlgebraicType.createProductType([])),
      new SumTypeVariant("Jakyl", AlgebraicType.createProductType([])),
      new SumTypeVariant("AlphaJakyl", AlgebraicType.createProductType([])),
      new SumTypeVariant("KingJakyl", AlgebraicType.createProductType([])),
      new SumTypeVariant("RockCrab", AlgebraicType.createProductType([])),
      new SumTypeVariant("DesertCrab", AlgebraicType.createProductType([])),
      new SumTypeVariant("FrostCrab", AlgebraicType.createProductType([])),
      new SumTypeVariant("ForestToad", AlgebraicType.createProductType([])),
      new SumTypeVariant("SwampToad", AlgebraicType.createProductType([])),
      new SumTypeVariant("FrostToad", AlgebraicType.createProductType([])),
      new SumTypeVariant("Umbura", AlgebraicType.createProductType([])),
      new SumTypeVariant("AlphaUmbura", AlgebraicType.createProductType([])),
      new SumTypeVariant("KingUmbura", AlgebraicType.createProductType([])),
      new SumTypeVariant("Drone", AlgebraicType.createProductType([])),
      new SumTypeVariant("Soldier", AlgebraicType.createProductType([])),
      new SumTypeVariant("Queen", AlgebraicType.createProductType([])),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: EnemyType): void {
      EnemyType.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): EnemyType {
      return EnemyType.getTypeScriptAlgebraicType().deserialize(reader);
  }

}

// The tagged union or sum type for the algebraic type `EnemyType`.
export type EnemyType = EnemyType.None | EnemyType.PracticeDummy | EnemyType.GrassBird | EnemyType.DesertBird | EnemyType.SwampBird | EnemyType.Goat | EnemyType.MountainGoat | EnemyType.DeerFemale | EnemyType.DeerMale | EnemyType.Elk | EnemyType.BoarFemale | EnemyType.BoarMale | EnemyType.BoarElder | EnemyType.PlainsOx | EnemyType.TundraOx | EnemyType.JungleLargeBird | EnemyType.DesertLargeBird | EnemyType.Jakyl | EnemyType.AlphaJakyl | EnemyType.KingJakyl | EnemyType.RockCrab | EnemyType.DesertCrab | EnemyType.FrostCrab | EnemyType.ForestToad | EnemyType.SwampToad | EnemyType.FrostToad | EnemyType.Umbura | EnemyType.AlphaUmbura | EnemyType.KingUmbura | EnemyType.Drone | EnemyType.Soldier | EnemyType.Queen;

export default EnemyType;

