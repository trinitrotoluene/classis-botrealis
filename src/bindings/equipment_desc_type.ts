// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  Identity,
  ProductType,
  ProductTypeElement,
  SubscriptionBuilderImpl,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
  type CallReducerFlags,
  type DbContext,
  type ErrorContextInterface,
  type Event,
  type EventContextInterface,
  type ReducerEventContextInterface,
  type SubscriptionEventContextInterface,
} from "@clockworklabs/spacetimedb-sdk";
import { CsvStatEntry as __CsvStatEntry } from "./csv_stat_entry_type";
import { LevelRequirement as __LevelRequirement } from "./level_requirement_type";
import { EquipmentSlotType as __EquipmentSlotType } from "./equipment_slot_type_type";
import { EquipmentVisualType as __EquipmentVisualType } from "./equipment_visual_type_type";
import { ClothingVisual as __ClothingVisual } from "./clothing_visual_type";
import { HandEquipmentVisual as __HandEquipmentVisual } from "./hand_equipment_visual_type";

export type EquipmentDesc = {
  itemId: number,
  slots: __EquipmentSlotType[],
  visualType: __EquipmentVisualType,
  levelRequirement: __LevelRequirement | undefined,
  clothingVisual: __ClothingVisual | undefined,
  handEquipmentVisual: __HandEquipmentVisual | undefined,
  stats: __CsvStatEntry[],
  requiredAchievements: number[],
  requiredKnowledges: number[],
};

/**
 * A namespace for generated helper functions.
 */
export namespace EquipmentDesc {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement("itemId", AlgebraicType.createI32Type()),
      new ProductTypeElement("slots", AlgebraicType.createArrayType(__EquipmentSlotType.getTypeScriptAlgebraicType())),
      new ProductTypeElement("visualType", __EquipmentVisualType.getTypeScriptAlgebraicType()),
      new ProductTypeElement("levelRequirement", AlgebraicType.createOptionType(__LevelRequirement.getTypeScriptAlgebraicType())),
      new ProductTypeElement("clothingVisual", AlgebraicType.createOptionType(__ClothingVisual.getTypeScriptAlgebraicType())),
      new ProductTypeElement("handEquipmentVisual", AlgebraicType.createOptionType(__HandEquipmentVisual.getTypeScriptAlgebraicType())),
      new ProductTypeElement("stats", AlgebraicType.createArrayType(__CsvStatEntry.getTypeScriptAlgebraicType())),
      new ProductTypeElement("requiredAchievements", AlgebraicType.createArrayType(AlgebraicType.createI32Type())),
      new ProductTypeElement("requiredKnowledges", AlgebraicType.createArrayType(AlgebraicType.createI32Type())),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: EquipmentDesc): void {
    EquipmentDesc.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): EquipmentDesc {
    return EquipmentDesc.getTypeScriptAlgebraicType().deserialize(reader);
  }

}


