// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  Identity,
  ProductType,
  ProductTypeElement,
  SubscriptionBuilderImpl,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
  type CallReducerFlags,
  type DbContext,
  type ErrorContextInterface,
  type Event,
  type EventContextInterface,
  type ReducerEventContextInterface,
  type SubscriptionEventContextInterface,
} from "@clockworklabs/spacetimedb-sdk";
// A namespace for generated variants and helper functions.
export namespace EquipmentSlotType {
  // These are the generated variant types for each variant of the tagged union.
  // One type is generated per variant and will be used in the `value` field of
  // the tagged union.
  export type MainHand = { tag: "MainHand" };
  export type OffHand = { tag: "OffHand" };
  export type HeadArtifact = { tag: "HeadArtifact" };
  export type TorsoArtifact = { tag: "TorsoArtifact" };
  export type HandArtifact = { tag: "HandArtifact" };
  export type FeetArtifact = { tag: "FeetArtifact" };
  export type HeadClothing = { tag: "HeadClothing" };
  export type TorsoClothing = { tag: "TorsoClothing" };
  export type HandClothing = { tag: "HandClothing" };
  export type BeltClothing = { tag: "BeltClothing" };
  export type LegClothing = { tag: "LegClothing" };
  export type FeetClothing = { tag: "FeetClothing" };
  export type None = { tag: "None" };

  // Helper functions for constructing each variant of the tagged union.
  // ```
  // const foo = Foo.A(42);
  // assert!(foo.tag === "A");
  // assert!(foo.value === 42);
  // ```
  export const MainHand = { tag: "MainHand" };
  export const OffHand = { tag: "OffHand" };
  export const HeadArtifact = { tag: "HeadArtifact" };
  export const TorsoArtifact = { tag: "TorsoArtifact" };
  export const HandArtifact = { tag: "HandArtifact" };
  export const FeetArtifact = { tag: "FeetArtifact" };
  export const HeadClothing = { tag: "HeadClothing" };
  export const TorsoClothing = { tag: "TorsoClothing" };
  export const HandClothing = { tag: "HandClothing" };
  export const BeltClothing = { tag: "BeltClothing" };
  export const LegClothing = { tag: "LegClothing" };
  export const FeetClothing = { tag: "FeetClothing" };
  export const None = { tag: "None" };

  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createSumType([
      new SumTypeVariant("MainHand", AlgebraicType.createProductType([])),
      new SumTypeVariant("OffHand", AlgebraicType.createProductType([])),
      new SumTypeVariant("HeadArtifact", AlgebraicType.createProductType([])),
      new SumTypeVariant("TorsoArtifact", AlgebraicType.createProductType([])),
      new SumTypeVariant("HandArtifact", AlgebraicType.createProductType([])),
      new SumTypeVariant("FeetArtifact", AlgebraicType.createProductType([])),
      new SumTypeVariant("HeadClothing", AlgebraicType.createProductType([])),
      new SumTypeVariant("TorsoClothing", AlgebraicType.createProductType([])),
      new SumTypeVariant("HandClothing", AlgebraicType.createProductType([])),
      new SumTypeVariant("BeltClothing", AlgebraicType.createProductType([])),
      new SumTypeVariant("LegClothing", AlgebraicType.createProductType([])),
      new SumTypeVariant("FeetClothing", AlgebraicType.createProductType([])),
      new SumTypeVariant("None", AlgebraicType.createProductType([])),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: EquipmentSlotType): void {
      EquipmentSlotType.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): EquipmentSlotType {
      return EquipmentSlotType.getTypeScriptAlgebraicType().deserialize(reader);
  }

}

// The tagged union or sum type for the algebraic type `EquipmentSlotType`.
export type EquipmentSlotType = EquipmentSlotType.MainHand | EquipmentSlotType.OffHand | EquipmentSlotType.HeadArtifact | EquipmentSlotType.TorsoArtifact | EquipmentSlotType.HandArtifact | EquipmentSlotType.FeetArtifact | EquipmentSlotType.HeadClothing | EquipmentSlotType.TorsoClothing | EquipmentSlotType.HandClothing | EquipmentSlotType.BeltClothing | EquipmentSlotType.LegClothing | EquipmentSlotType.FeetClothing | EquipmentSlotType.None;

export default EquipmentSlotType;

