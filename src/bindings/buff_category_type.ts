// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  Identity,
  ProductType,
  ProductTypeElement,
  SubscriptionBuilderImpl,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
  type CallReducerFlags,
  type DbContext,
  type ErrorContextInterface,
  type Event,
  type EventContextInterface,
  type ReducerEventContextInterface,
  type SubscriptionEventContextInterface,
} from "@clockworklabs/spacetimedb-sdk";
// A namespace for generated variants and helper functions.
export namespace BuffCategory {
  // These are the generated variant types for each variant of the tagged union.
  // One type is generated per variant and will be used in the `value` field of
  // the tagged union.
  export type None = { tag: "None" };
  export type Generic = { tag: "Generic" };
  export type Rested = { tag: "Rested" };
  export type RezSicknessShortTerm = { tag: "RezSicknessShortTerm" };
  export type RezSicknessLongTerm = { tag: "RezSicknessLongTerm" };
  export type InnerLight = { tag: "InnerLight" };
  export type Darkness = { tag: "Darkness" };
  export type CarryCargo = { tag: "CarryCargo" };
  export type Freezing = { tag: "Freezing" };
  export type Overheating = { tag: "Overheating" };
  export type FriendWarpDebuff = { tag: "FriendWarpDebuff" };
  export type Starving = { tag: "Starving" };
  export type ElevatorSickness = { tag: "ElevatorSickness" };
  export type NearbyFlame = { tag: "NearbyFlame" };

  // Helper functions for constructing each variant of the tagged union.
  // ```
  // const foo = Foo.A(42);
  // assert!(foo.tag === "A");
  // assert!(foo.value === 42);
  // ```
  export const None = { tag: "None" };
  export const Generic = { tag: "Generic" };
  export const Rested = { tag: "Rested" };
  export const RezSicknessShortTerm = { tag: "RezSicknessShortTerm" };
  export const RezSicknessLongTerm = { tag: "RezSicknessLongTerm" };
  export const InnerLight = { tag: "InnerLight" };
  export const Darkness = { tag: "Darkness" };
  export const CarryCargo = { tag: "CarryCargo" };
  export const Freezing = { tag: "Freezing" };
  export const Overheating = { tag: "Overheating" };
  export const FriendWarpDebuff = { tag: "FriendWarpDebuff" };
  export const Starving = { tag: "Starving" };
  export const ElevatorSickness = { tag: "ElevatorSickness" };
  export const NearbyFlame = { tag: "NearbyFlame" };

  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createSumType([
      new SumTypeVariant("None", AlgebraicType.createProductType([])),
      new SumTypeVariant("Generic", AlgebraicType.createProductType([])),
      new SumTypeVariant("Rested", AlgebraicType.createProductType([])),
      new SumTypeVariant("RezSicknessShortTerm", AlgebraicType.createProductType([])),
      new SumTypeVariant("RezSicknessLongTerm", AlgebraicType.createProductType([])),
      new SumTypeVariant("InnerLight", AlgebraicType.createProductType([])),
      new SumTypeVariant("Darkness", AlgebraicType.createProductType([])),
      new SumTypeVariant("CarryCargo", AlgebraicType.createProductType([])),
      new SumTypeVariant("Freezing", AlgebraicType.createProductType([])),
      new SumTypeVariant("Overheating", AlgebraicType.createProductType([])),
      new SumTypeVariant("FriendWarpDebuff", AlgebraicType.createProductType([])),
      new SumTypeVariant("Starving", AlgebraicType.createProductType([])),
      new SumTypeVariant("ElevatorSickness", AlgebraicType.createProductType([])),
      new SumTypeVariant("NearbyFlame", AlgebraicType.createProductType([])),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: BuffCategory): void {
      BuffCategory.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): BuffCategory {
      return BuffCategory.getTypeScriptAlgebraicType().deserialize(reader);
  }

}

// The tagged union or sum type for the algebraic type `BuffCategory`.
export type BuffCategory = BuffCategory.None | BuffCategory.Generic | BuffCategory.Rested | BuffCategory.RezSicknessShortTerm | BuffCategory.RezSicknessLongTerm | BuffCategory.InnerLight | BuffCategory.Darkness | BuffCategory.CarryCargo | BuffCategory.Freezing | BuffCategory.Overheating | BuffCategory.FriendWarpDebuff | BuffCategory.Starving | BuffCategory.ElevatorSickness | BuffCategory.NearbyFlame;

export default BuffCategory;

