// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  Identity,
  ProductType,
  ProductTypeElement,
  SubscriptionBuilderImpl,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
  type CallReducerFlags,
  type DbContext,
  type ErrorContextInterface,
  type Event,
  type EventContextInterface,
  type ReducerEventContextInterface,
  type SubscriptionEventContextInterface,
} from "@clockworklabs/spacetimedb-sdk";
import { OffsetCoordinatesSmallMessage as __OffsetCoordinatesSmallMessage } from "./offset_coordinates_small_message_type";

export type ClaimLocalState = {
  entityId: bigint,
  supplies: number,
  buildingMaintenance: number,
  numTiles: number,
  numTileNeighbors: number,
  location: __OffsetCoordinatesSmallMessage | undefined,
  treasury: number,
  xpGainedSinceLastCoinMinting: number,
  suppliesPurchaseThreshold: number,
  suppliesPurchasePrice: number,
  buildingDescriptionId: number,
};

/**
 * A namespace for generated helper functions.
 */
export namespace ClaimLocalState {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement("entityId", AlgebraicType.createU64Type()),
      new ProductTypeElement("supplies", AlgebraicType.createI32Type()),
      new ProductTypeElement("buildingMaintenance", AlgebraicType.createF32Type()),
      new ProductTypeElement("numTiles", AlgebraicType.createI32Type()),
      new ProductTypeElement("numTileNeighbors", AlgebraicType.createU32Type()),
      new ProductTypeElement("location", AlgebraicType.createOptionType(__OffsetCoordinatesSmallMessage.getTypeScriptAlgebraicType())),
      new ProductTypeElement("treasury", AlgebraicType.createU32Type()),
      new ProductTypeElement("xpGainedSinceLastCoinMinting", AlgebraicType.createU32Type()),
      new ProductTypeElement("suppliesPurchaseThreshold", AlgebraicType.createU32Type()),
      new ProductTypeElement("suppliesPurchasePrice", AlgebraicType.createF32Type()),
      new ProductTypeElement("buildingDescriptionId", AlgebraicType.createI32Type()),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: ClaimLocalState): void {
    ClaimLocalState.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): ClaimLocalState {
    return ClaimLocalState.getTypeScriptAlgebraicType().deserialize(reader);
  }

}


