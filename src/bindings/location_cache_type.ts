// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  Identity,
  ProductType,
  ProductTypeElement,
  SubscriptionBuilderImpl,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
  type CallReducerFlags,
  type DbContext,
  type ErrorContextInterface,
  type Event,
  type EventContextInterface,
  type ReducerEventContextInterface,
  type SubscriptionEventContextInterface,
} from "@clockworklabs/spacetimedb-sdk";
import { SmallHexTileMessage as __SmallHexTileMessage } from "./small_hex_tile_message_type";
import { RuinsEntityValuePair as __RuinsEntityValuePair } from "./ruins_entity_value_pair_type";

export type LocationCache = {
  version: number,
  tradingPostLocations: __SmallHexTileMessage[],
  allRuins: __RuinsEntityValuePair[],
  travelerRuins: __RuinsEntityValuePair[],
  spawnLocations: __SmallHexTileMessage[],
  biomeChunks: number[],
  regionMaxX: number,
  regionMaxZ: number,
  regionMinX: number,
  regionMinZ: number,
};

/**
 * A namespace for generated helper functions.
 */
export namespace LocationCache {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement("version", AlgebraicType.createI32Type()),
      new ProductTypeElement("tradingPostLocations", AlgebraicType.createArrayType(__SmallHexTileMessage.getTypeScriptAlgebraicType())),
      new ProductTypeElement("allRuins", AlgebraicType.createArrayType(__RuinsEntityValuePair.getTypeScriptAlgebraicType())),
      new ProductTypeElement("travelerRuins", AlgebraicType.createArrayType(__RuinsEntityValuePair.getTypeScriptAlgebraicType())),
      new ProductTypeElement("spawnLocations", AlgebraicType.createArrayType(__SmallHexTileMessage.getTypeScriptAlgebraicType())),
      new ProductTypeElement("biomeChunks", AlgebraicType.createArrayType(AlgebraicType.createF32Type())),
      new ProductTypeElement("regionMaxX", AlgebraicType.createI32Type()),
      new ProductTypeElement("regionMaxZ", AlgebraicType.createI32Type()),
      new ProductTypeElement("regionMinX", AlgebraicType.createI32Type()),
      new ProductTypeElement("regionMinZ", AlgebraicType.createI32Type()),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: LocationCache): void {
    LocationCache.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): LocationCache {
    return LocationCache.getTypeScriptAlgebraicType().deserialize(reader);
  }

}


