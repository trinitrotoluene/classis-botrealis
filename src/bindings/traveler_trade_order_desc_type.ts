// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  Identity,
  ProductType,
  ProductTypeElement,
  SubscriptionBuilderImpl,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
  type CallReducerFlags,
  type DbContext,
  type ErrorContextInterface,
  type Event,
  type EventContextInterface,
  type ReducerEventContextInterface,
  type SubscriptionEventContextInterface,
} from "@clockworklabs/spacetimedb-sdk";
import { ItemStack as __ItemStack } from "./item_stack_type";
import { NpcType as __NpcType } from "./npc_type_type";
import { LevelRequirement as __LevelRequirement } from "./level_requirement_type";

export type TravelerTradeOrderDesc = {
  id: number,
  startingStock: number,
  alwaysOffered: boolean,
  traveler: __NpcType,
  offerItems: __ItemStack[],
  offerCargoId: number[],
  requiredItems: __ItemStack[],
  requiredCargoId: number[],
  levelRequirements: __LevelRequirement[],
  achievementRequirements: number[],
  hideIfRequirementsAreNotMet: boolean,
  requiredKnowledges: number[],
  hideWithoutRequiredKnowledge: boolean,
  blockingKnowledges: number[],
  hideWithBlockingKnowledges: boolean,
};

/**
 * A namespace for generated helper functions.
 */
export namespace TravelerTradeOrderDesc {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement("id", AlgebraicType.createI32Type()),
      new ProductTypeElement("startingStock", AlgebraicType.createI32Type()),
      new ProductTypeElement("alwaysOffered", AlgebraicType.createBoolType()),
      new ProductTypeElement("traveler", __NpcType.getTypeScriptAlgebraicType()),
      new ProductTypeElement("offerItems", AlgebraicType.createArrayType(__ItemStack.getTypeScriptAlgebraicType())),
      new ProductTypeElement("offerCargoId", AlgebraicType.createArrayType(AlgebraicType.createI32Type())),
      new ProductTypeElement("requiredItems", AlgebraicType.createArrayType(__ItemStack.getTypeScriptAlgebraicType())),
      new ProductTypeElement("requiredCargoId", AlgebraicType.createArrayType(AlgebraicType.createI32Type())),
      new ProductTypeElement("levelRequirements", AlgebraicType.createArrayType(__LevelRequirement.getTypeScriptAlgebraicType())),
      new ProductTypeElement("achievementRequirements", AlgebraicType.createArrayType(AlgebraicType.createI32Type())),
      new ProductTypeElement("hideIfRequirementsAreNotMet", AlgebraicType.createBoolType()),
      new ProductTypeElement("requiredKnowledges", AlgebraicType.createArrayType(AlgebraicType.createI32Type())),
      new ProductTypeElement("hideWithoutRequiredKnowledge", AlgebraicType.createBoolType()),
      new ProductTypeElement("blockingKnowledges", AlgebraicType.createArrayType(AlgebraicType.createI32Type())),
      new ProductTypeElement("hideWithBlockingKnowledges", AlgebraicType.createBoolType()),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: TravelerTradeOrderDesc): void {
    TravelerTradeOrderDesc.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): TravelerTradeOrderDesc {
    return TravelerTradeOrderDesc.getTypeScriptAlgebraicType().deserialize(reader);
  }

}


