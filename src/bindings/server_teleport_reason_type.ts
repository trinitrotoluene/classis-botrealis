// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  Identity,
  ProductType,
  ProductTypeElement,
  SubscriptionBuilderImpl,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
  type CallReducerFlags,
  type DbContext,
  type ErrorContextInterface,
  type Event,
  type EventContextInterface,
  type ReducerEventContextInterface,
  type SubscriptionEventContextInterface,
} from "@clockworklabs/spacetimedb-sdk";
// A namespace for generated variants and helper functions.
export namespace ServerTeleportReason {
  // These are the generated variant types for each variant of the tagged union.
  // One type is generated per variant and will be used in the `value` field of
  // the tagged union.
  export type RuinCollapse = { tag: "RuinCollapse" };
  export type InteriorDeconstructed = { tag: "InteriorDeconstructed" };
  export type PlayerDied = { tag: "PlayerDied" };
  export type TeleportItem = { tag: "TeleportItem" };
  export type PlayerHousingChangedLocation = { tag: "PlayerHousingChangedLocation" };
  export type PlayerHousingUnderMaintenance = { tag: "PlayerHousingUnderMaintenance" };
  export type PlayerHousingDeconstructed = { tag: "PlayerHousingDeconstructed" };

  // Helper functions for constructing each variant of the tagged union.
  // ```
  // const foo = Foo.A(42);
  // assert!(foo.tag === "A");
  // assert!(foo.value === 42);
  // ```
  export const RuinCollapse = { tag: "RuinCollapse" };
  export const InteriorDeconstructed = { tag: "InteriorDeconstructed" };
  export const PlayerDied = { tag: "PlayerDied" };
  export const TeleportItem = { tag: "TeleportItem" };
  export const PlayerHousingChangedLocation = { tag: "PlayerHousingChangedLocation" };
  export const PlayerHousingUnderMaintenance = { tag: "PlayerHousingUnderMaintenance" };
  export const PlayerHousingDeconstructed = { tag: "PlayerHousingDeconstructed" };

  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createSumType([
      new SumTypeVariant("RuinCollapse", AlgebraicType.createProductType([])),
      new SumTypeVariant("InteriorDeconstructed", AlgebraicType.createProductType([])),
      new SumTypeVariant("PlayerDied", AlgebraicType.createProductType([])),
      new SumTypeVariant("TeleportItem", AlgebraicType.createProductType([])),
      new SumTypeVariant("PlayerHousingChangedLocation", AlgebraicType.createProductType([])),
      new SumTypeVariant("PlayerHousingUnderMaintenance", AlgebraicType.createProductType([])),
      new SumTypeVariant("PlayerHousingDeconstructed", AlgebraicType.createProductType([])),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: ServerTeleportReason): void {
      ServerTeleportReason.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): ServerTeleportReason {
      return ServerTeleportReason.getTypeScriptAlgebraicType().deserialize(reader);
  }

}

// The tagged union or sum type for the algebraic type `ServerTeleportReason`.
export type ServerTeleportReason = ServerTeleportReason.RuinCollapse | ServerTeleportReason.InteriorDeconstructed | ServerTeleportReason.PlayerDied | ServerTeleportReason.TeleportItem | ServerTeleportReason.PlayerHousingChangedLocation | ServerTeleportReason.PlayerHousingUnderMaintenance | ServerTeleportReason.PlayerHousingDeconstructed;

export default ServerTeleportReason;

